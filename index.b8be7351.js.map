{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCIA,IAAM,EAAY,SAAS,gBAAgB,CAAC,cACtC,EAAY,SAAS,aAAa,CAAC,eACnC,EAAS,SAAS,aAAa,CAAC,WAElC,EAAQ,EACR,EAAY,IAEhB,SAAS,IACP,MAAO,CACL,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACb,AACH,CAMA,SAAS,IACP,OAAO,KAAK,KAAK,CAAC,AAAgB,EAAhB,KAAK,MAAM,GAC/B,CAEA,SAAS,IACP,IAAM,EAAI,IACJ,EAAI,GAEN,AAAoB,CAAA,IAApB,CAAS,CAAC,EAAE,CAAC,EAAE,CACjB,CAAS,CAAC,EAAE,CAAC,EAAE,CAZV,KAAK,MAAM,GAAK,GAAM,EAAI,EAc/B,GAEJ,CAEA,SAAS,IACP,IAAK,IAAI,EAAM,EAAG,EAAM,EAAG,IACzB,IAAK,IAAI,EAAM,EAAG,EAAM,EAAG,IACzB,CAAS,CAAC,EAAI,CAAC,QAAQ,CAAC,EAAI,CAAC,WAAW,CAAG,CAAS,CAAC,EAAI,CAAC,EAAI,CAC1D,CAAS,CAAC,EAAI,CAAC,EAAI,CACnB,GAEJ,CAAS,CAAC,EAAI,CAAC,QAAQ,CAAC,EAAI,CAAC,SAAS,CACnC,0BAA6C,MAAA,CAApB,CAAS,CAAC,EAAI,CAAC,EAAI,CAInD,CAAA,EAAU,WAAW,CAAG,CAC1B,CA+BA,SAAS,IACP,OAAO,gBAAgB,CAAC,UAAW,EAAa,CAAE,KAA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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar MAX_VALUE = 2048;\nvar rowsField = document.querySelectorAll(\".field-row\");\nvar gameScore = document.querySelector(\".game-score\");\nvar button = document.querySelector(\".button\");\nvar score = 0;\nvar gameField = emptyArray();\nfunction emptyArray() {\n    return [\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ]\n    ];\n}\nfunction randomNum() {\n    return Math.random() > 0.9 ? 4 : 2;\n}\nfunction randomInd() {\n    return Math.floor(Math.random() * 4);\n}\nfunction startGame() {\n    var x = randomInd();\n    var y = randomInd();\n    if (gameField[x][y] === 0) gameField[x][y] = randomNum();\n    else startGame();\n}\nfunction render() {\n    for(var row = 0; row < 4; row++)for(var col = 0; col < 4; col++){\n        rowsField[row].children[col].textContent = gameField[row][col] ? gameField[row][col] : \"\";\n        rowsField[row].children[col].className = \"field-cell field-cell--\".concat(gameField[row][col]);\n    }\n    gameScore.textContent = score;\n}\nfunction reset() {\n    gameField = emptyArray();\n    score = 0;\n    render();\n    setupInput();\n}\nbutton.addEventListener(\"click\", function() {\n    if (button.textContent === \"Start\") {\n        button.textContent = \"Restart\";\n        button.classList.replace(\"start\", \"restart\");\n        document.querySelector(\".message-start\").classList.add(\"hidden\");\n    } else {\n        document.querySelector(\".message-lose\").className = \"message message-lose hidden\";\n        document.querySelector(\".message-win\").className = \"message message-win hidden\";\n        reset();\n    }\n    startGame();\n    startGame();\n    render();\n});\nsetupInput();\nfunction setupInput() {\n    window.addEventListener(\"keydown\", handleInput, {\n        once: true\n    });\n}\nfunction handleInput(e) {\n    switch(e.key){\n        case \"ArrowUp\":\n            moveUp();\n            break;\n        case \"ArrowDown\":\n            moveDown();\n            break;\n        case \"ArrowLeft\":\n            moveLeft();\n            break;\n        case \"ArrowRight\":\n            moveRight();\n            break;\n        default:\n            setupInput();\n            return;\n    }\n    var isNotEmpty = gameField.some(function(group) {\n        return group.includes(0);\n    });\n    if (!isNotEmpty && canMove(gameField) === false) document.querySelector(\".message-lose\").classList.toggle(\"hidden\");\n    else setupInput();\n    var isWin = gameField.some(function(group) {\n        return group.includes(MAX_VALUE);\n    });\n    if (isWin) document.querySelector(\".message-win\").classList.toggle(\"hidden\");\n}\nfunction cellsByRow(field) {\n    var newArr = [];\n    for(var i = 0; i < field.length; i++){\n        var arr = [];\n        for(var j = 0; j < field[i].length; j++)arr.push(field[j][i]);\n        newArr.push(arr);\n    }\n    return newArr;\n}\nfunction moveUp() {\n    var byRow = moveCells(cellsByRow(gameField));\n    var copyGameField = gameField.map(function(group) {\n        return _to_consumable_array(group);\n    });\n    var newGameField = gameField.map(function(group) {\n        return _to_consumable_array(group);\n    });\n    var isBreak = false;\n    for(var i = 0; i < 4; i++)for(var k = 0; k < 4; k++)newGameField[i][k] = byRow[k][i];\n    for(var i1 = 0; i1 < copyGameField.length; i1++){\n        for(var k1 = 0; k1 < copyGameField[i1].length; k1++)if (copyGameField[i1][k1] !== newGameField[i1][k1]) {\n            gameField = newGameField;\n            startGame();\n            render();\n            isBreak = true;\n            break;\n        }\n        if (isBreak) break;\n    }\n}\nfunction moveDown() {\n    var reverseGameField = gameField.map(function(group) {\n        return _to_consumable_array(group);\n    }).reverse();\n    var byRow = moveCells(cellsByRow(reverseGameField));\n    var newGameField = gameField.map(function(group) {\n        return _to_consumable_array(group);\n    });\n    var copyGameField = gameField.map(function(group) {\n        return _to_consumable_array(group);\n    });\n    var isBreak = false;\n    for(var i = 0; i < 4; i++)for(var k = 0; k < 4; k++)newGameField[i][k] = byRow[k][i];\n    newGameField.reverse();\n    for(var i1 = 0; i1 < copyGameField.length; i1++){\n        for(var k1 = 0; k1 < copyGameField[i1].length; k1++)if (copyGameField[i1][k1] !== newGameField[i1][k1]) {\n            gameField = newGameField;\n            startGame();\n            render();\n            isBreak = true;\n            break;\n        }\n        if (isBreak) break;\n    }\n}\nfunction moveLeft() {\n    var newGameField = moveCells(gameField);\n    var copyGameField = gameField.map(function(group) {\n        return _to_consumable_array(group);\n    });\n    var isBreak = false;\n    for(var i = 0; i < copyGameField.length; i++){\n        for(var k = 0; k < copyGameField[i].length; k++)if (copyGameField[i][k] !== newGameField[i][k]) {\n            gameField = newGameField;\n            startGame();\n            render();\n            isBreak = true;\n            break;\n        }\n        if (isBreak) break;\n    }\n}\nfunction moveRight() {\n    var reverseGameField = gameField.map(function(group) {\n        return _to_consumable_array(group).reverse();\n    });\n    var newGameField = moveCells(reverseGameField).map(function(group) {\n        return _to_consumable_array(group).reverse();\n    });\n    var copyGameField = gameField.map(function(group) {\n        return _to_consumable_array(group);\n    });\n    var isBreak = false;\n    for(var i = 0; i < copyGameField.length; i++){\n        for(var k = 0; k < copyGameField[i].length; k++)if (copyGameField[i][k] !== newGameField[i][k]) {\n            gameField = newGameField;\n            startGame();\n            render();\n            isBreak = true;\n            break;\n        }\n        if (isBreak) break;\n    }\n}\nfunction moveCells(cells) {\n    var mergeCells = [];\n    cells.forEach(function(group) {\n        var numbers = group.filter(function(x) {\n            return x !== 0;\n        });\n        var isMerge = false;\n        for(var i = 1; i < numbers.length; i++)if (numbers[i] === numbers[i - 1] && !isMerge) {\n            numbers[i - 1] = numbers[i] + numbers[i];\n            numbers[i] = 0;\n            score += numbers[i - 1];\n            i--;\n            isMerge = true;\n            numbers = numbers.filter(function(x) {\n                return x !== 0;\n            });\n        }\n        var difLen = group.length - numbers.length;\n        if (group.length !== numbers.length) mergeCells.push(numbers.concat(Array(difLen).fill(0)));\n        else mergeCells.push(numbers);\n    });\n    return mergeCells;\n}\nfunction canMove(field) {\n    var byRow = false;\n    field.forEach(function(row) {\n        for(var i = 0; i < row.length - 1; i++)if (row[i] === row[i + 1]) byRow = true;\n    });\n    var byColumn = false;\n    for(var i = 0; i < field.length; i++){\n        for(var k = 0; k < field[i].length - 1; k++)if (field[k][i] === field[k + 1][i]) byColumn = true;\n    }\n    return byRow || byColumn;\n}\n\n//# sourceMappingURL=index.b8be7351.js.map\n","'use strict';\n\nconst MAX_VALUE = 2048;\n\nconst rowsField = document.querySelectorAll('.field-row');\nconst gameScore = document.querySelector('.game-score');\nconst button = document.querySelector('.button');\n\nlet score = 0;\nlet gameField = emptyArray();\n\nfunction emptyArray() {\n  return [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n}\n\nfunction randomNum() {\n  return Math.random() > 0.9 ? 4 : 2;\n}\n\nfunction randomInd() {\n  return Math.floor(Math.random() * 4);\n}\n\nfunction startGame() {\n  const x = randomInd();\n  const y = randomInd();\n\n  if (gameField[x][y] === 0) {\n    gameField[x][y] = randomNum();\n  } else {\n    startGame();\n  }\n}\n\nfunction render() {\n  for (let row = 0; row < 4; row++) {\n    for (let col = 0; col < 4; col++) {\n      rowsField[row].children[col].textContent = gameField[row][col]\n        ? gameField[row][col]\n        : '';\n\n      rowsField[row].children[col].className =\n        `field-cell field-cell--${gameField[row][col]}`;\n    }\n  }\n\n  gameScore.textContent = score;\n}\n\nfunction reset() {\n  gameField = emptyArray();\n  score = 0;\n\n  render();\n  setupInput();\n}\n\nbutton.addEventListener('click', () => {\n  if (button.textContent === 'Start') {\n    button.textContent = 'Restart';\n    button.classList.replace('start', 'restart');\n    document.querySelector('.message-start').classList.add('hidden');\n  } else {\n    document.querySelector('.message-lose').className =\n      'message message-lose hidden';\n\n    document.querySelector('.message-win').className =\n      'message message-win hidden';\n    reset();\n  }\n\n  startGame();\n  startGame();\n  render();\n});\n\nsetupInput();\n\nfunction setupInput() {\n  window.addEventListener('keydown', handleInput, { once: true });\n}\n\nfunction handleInput(e) {\n  switch (e.key) {\n    case 'ArrowUp':\n      moveUp();\n      break;\n\n    case 'ArrowDown':\n      moveDown();\n      break;\n\n    case 'ArrowLeft':\n      moveLeft();\n      break;\n\n    case 'ArrowRight':\n      moveRight();\n      break;\n\n    default:\n      setupInput();\n\n      return;\n  }\n\n  const isNotEmpty = gameField.some((group) => group.includes(0));\n\n  if (!isNotEmpty && canMove(gameField) === false) {\n    document.querySelector('.message-lose').classList.toggle('hidden');\n  } else {\n    setupInput();\n  }\n\n  const isWin = gameField.some((group) => group.includes(MAX_VALUE));\n\n  if (isWin) {\n    document.querySelector('.message-win').classList.toggle('hidden');\n  }\n}\n\nfunction cellsByRow(field) {\n  const newArr = [];\n\n  for (let i = 0; i < field.length; i++) {\n    const arr = [];\n\n    for (let j = 0; j < field[i].length; j++) {\n      arr.push(field[j][i]);\n    }\n    newArr.push(arr);\n  }\n\n  return newArr;\n}\n\nfunction moveUp() {\n  const byRow = moveCells(cellsByRow(gameField));\n  const copyGameField = gameField.map((group) => [...group]);\n  const newGameField = gameField.map((group) => [...group]);\n  let isBreak = false;\n\n  for (let i = 0; i < 4; i++) {\n    for (let k = 0; k < 4; k++) {\n      newGameField[i][k] = byRow[k][i];\n    }\n  }\n\n  for (let i = 0; i < copyGameField.length; i++) {\n    for (let k = 0; k < copyGameField[i].length; k++) {\n      if (copyGameField[i][k] !== newGameField[i][k]) {\n        gameField = newGameField;\n        startGame();\n        render();\n        isBreak = true;\n        break;\n      }\n    }\n\n    if (isBreak) {\n      break;\n    }\n  }\n}\n\nfunction moveDown() {\n  const reverseGameField = gameField.map((group) => [...group]).reverse();\n  const byRow = moveCells(cellsByRow(reverseGameField));\n  const newGameField = gameField.map((group) => [...group]);\n\n  const copyGameField = gameField.map((group) => [...group]);\n  let isBreak = false;\n\n  for (let i = 0; i < 4; i++) {\n    for (let k = 0; k < 4; k++) {\n      newGameField[i][k] = byRow[k][i];\n    }\n  }\n\n  newGameField.reverse();\n\n  for (let i = 0; i < copyGameField.length; i++) {\n    for (let k = 0; k < copyGameField[i].length; k++) {\n      if (copyGameField[i][k] !== newGameField[i][k]) {\n        gameField = newGameField;\n        startGame();\n        render();\n        isBreak = true;\n        break;\n      }\n    }\n\n    if (isBreak) {\n      break;\n    }\n  }\n}\n\nfunction moveLeft() {\n  const newGameField = moveCells(gameField);\n  const copyGameField = gameField.map((group) => [...group]);\n\n  let isBreak = false;\n\n  for (let i = 0; i < copyGameField.length; i++) {\n    for (let k = 0; k < copyGameField[i].length; k++) {\n      if (copyGameField[i][k] !== newGameField[i][k]) {\n        gameField = newGameField;\n        startGame();\n        render();\n        isBreak = true;\n        break;\n      }\n    }\n\n    if (isBreak) {\n      break;\n    }\n  }\n}\n\nfunction moveRight() {\n  const reverseGameField = gameField.map((group) => [...group].reverse());\n  const newGameField = moveCells(reverseGameField).map((group) => {\n    return [...group].reverse();\n  });\n\n  const copyGameField = gameField.map((group) => [...group]);\n  let isBreak = false;\n\n  for (let i = 0; i < copyGameField.length; i++) {\n    for (let k = 0; k < copyGameField[i].length; k++) {\n      if (copyGameField[i][k] !== newGameField[i][k]) {\n        gameField = newGameField;\n        startGame();\n        render();\n        isBreak = true;\n        break;\n      }\n    }\n\n    if (isBreak) {\n      break;\n    }\n  }\n}\n\nfunction moveCells(cells) {\n  const mergeCells = [];\n\n  cells.forEach((group) => {\n    let numbers = group.filter((x) => x !== 0);\n    let isMerge = false;\n\n    for (let i = 1; i < numbers.length; i++) {\n      if (numbers[i] === numbers[i - 1] && !isMerge) {\n        numbers[i - 1] = numbers[i] + numbers[i];\n        numbers[i] = 0;\n        score += numbers[i - 1];\n        i--;\n        isMerge = true;\n\n        numbers = numbers.filter((x) => x !== 0);\n      }\n    }\n\n    const difLen = group.length - numbers.length;\n\n    if (group.length !== numbers.length) {\n      mergeCells.push(numbers.concat(Array(difLen).fill(0)));\n    } else {\n      mergeCells.push(numbers);\n    }\n  });\n\n  return mergeCells;\n}\n\nfunction canMove(field) {\n  let byRow = false;\n\n  field.forEach((row) => {\n    for (let i = 0; i < row.length - 1; i++) {\n      if (row[i] === row[i + 1]) {\n        byRow = true;\n      }\n    }\n  });\n\n  let byColumn = false;\n\n  for (let i = 0; i < field.length; i++) {\n    for (let k = 0; k < field[i].length - 1; k++) {\n      if (field[k][i] === field[k + 1][i]) {\n        byColumn = true;\n      }\n    }\n  }\n\n  return byRow || byColumn;\n}\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","rowsField","document","querySelectorAll","gameScore","querySelector","button","score","gameField","emptyArray","randomInd","Math","floor","random","startGame","x","y","render","row","col","children","textContent","className","concat","setupInput","window","addEventListener","handleInput","once","e","key","moveUp","byRow","moveCells","cellsByRow","copyGameField","map","group","newGameField","isBreak","k","i1","k1","moveDown","reverse","moveLeft","moveRight","some","includes","canMove","field","forEach","byColumn","classList","toggle","newArr","j","push","cells","mergeCells","numbers","filter","isMerge","difLen","fill","replace","add"],"version":3,"file":"index.b8be7351.js.map"}